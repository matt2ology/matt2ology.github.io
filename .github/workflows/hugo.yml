# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch: # Triggered from another repo (e.g., notes)
    types: [sync-from-notes]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.151.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout with submodules
        uses: actions/checkout@v5
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert Markdown & wiki-style links to Hugo shortcodes
        run: |
          shopt -s globstar nullglob

          for file in content/**/*.md; do
            [[ "$file" == content/templates/* ]] && continue
            echo "Processing $file"

            perl -pi -e '
              # --- [[Page|Label]] → [Label]({{< relref "page.md" >}})
              s{
                \[\[([^]|#]+)\|([^]]+)\]\]
              }{
                my ($page, $label) = ($1, $2);
                $page = lc($page);
                "[${label}]({{< relref \"${page}.md\" >}})"
              }gex;

              # --- [[Page#Section]] → [Section]({{< relref "page.md#section" >}})
              s{
                \[\[([^]|#]+)\#([^\]]+)\]\]
              }{
                my ($page, $anchor) = ($1, $2);
                $page = lc($page);
                $anchor = lc($anchor);
                $anchor =~ s/[^a-z0-9 \-]//g;
                $anchor =~ s/ /-/g;
                "[${anchor}]({{< relref \"${page}.md#${anchor}\" >}})"
              }gex;

              # --- [[Page]] → [Page]({{< relref "page.md" >}})
              s{
                \[\[([^]|#]+)\]\]
              }{
                my $page = lc($1);
                "[${1}]({{< relref \"${page}.md\" >}})"
              }gex;

              # --- [Label](guide.md#section) → [Label]({{< relref "guide.md#section" >}})
              s{
                \[([^]]+)\]\( ([^()]+\.md#[^()]+) \)
              }{
                "[$1]({{< relref \"$2\" >}})"
              }gex;

              # --- [Label](guide.md) → [Label]({{< relref "guide.md" >}})
              s{
                \[([^]]+)\]\( ([^()]+\.md) \)
              }{
                "[$1]({{< relref \"$2\" >}})"
              }gex;
            ' "$file"
          done

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
