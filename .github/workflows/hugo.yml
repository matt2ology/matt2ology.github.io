# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch: # Triggered from another repo (e.g., notes)
    types: [sync-from-notes]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.151.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout with submodules
        uses: actions/checkout@v5
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert wiki-style and Markdown links to Hugo relref
        run: |
          # Enable nullglob so patterns with no matches expand to nothing
          shopt -s nullglob

          # Array to collect changed files
          changed_files=()

          # Process all Markdown files except templates
          find content -type f -name "*.md" ! -path "*/templates/*" -print0 |
          while IFS= read -r -d '' file; do
            # Backup original file for diffing
            tmp_before=$(mktemp)
            cp "$file" "$tmp_before"

            # Use Perl to handle wiki-style and Markdown links
            perl -CS -pi -e '

              # Hugo-style slugify for anchors
              sub hugo_slugify {
                my $s = shift;
                $s = lc $s;                     # lowercase
                $s =~ s/[^\p{L}\p{N}\s-]//g;   # remove punctuation except letters, numbers, space, dash
                $s =~ s/\s+/-/g;               # spaces to dash
                $s =~ s/^-|-$//g;              # trim leading/trailing dash
                return $s;
              }

              # Convert wiki-style links: [[Page]], [[Page|Label]], [[Page#Section]], [[Page#Section|Label]]
              s/\[\[([^\]|#]+)(?:#([^\]|]+))?(?:\|([^\]]+))?\]\]/ 
                do {
                  my $page = lc($1) . ".md";
                  my $anchor = $2 ? "#" . hugo_slugify($2) : "";
                  my $label = $3 || $2 || $1;   # Prefer Label, then Section, then Page
                  "[$label]({{< relref \"" . $page . $anchor . "\" >}})"
                }/ge;

              # Convert markdown-style links: [Label](file.md) or [Label](file.md#anchor)
              s/\[([^\]]+)\]\(([^\)]+\.md(?:#[^\)]+)?)\)/ 
                do {
                  my ($label, $target) = ($1, $2);
                  if ($target =~ /#(.*)$/) {
                    my $anchor = hugo_slugify($1);
                    $target =~ s/#.*$/#$anchor/;
                  }
                  "[$label]({{< relref \"$target\" >}})"
                }/ge;
            ' "$file"

            # Check if file changed
            if ! cmp -s "$file" "$tmp_before"; then
              changed_files+=("$file")
            fi

            rm "$tmp_before"
          done

          # Print summary
          if [ ${#changed_files[@]} -eq 0 ]; then
            echo "No Markdown files were changed."
          else
            echo "Converted links in the following files:"
            for f in "${changed_files[@]}"; do
              echo "- $f"
            done
          fi

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
